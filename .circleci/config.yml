version: 2
jobs:
  build:
    parallelism: 3
    working_directory: ~/monument_server
    docker:
      - image: ruby:2.7-alpine3.13
        environment:
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          PGHOST: 127.0.0.1
          PGUSER: circleci-demo-ruby
          RAILS_ENV: test
      - image: circleci/postgres:12.3
        environment:
          POSTGRES_USER: circleci-demo-ruby
          POSTGRES_DB: monumental_server
          POSTGRES_PASSWORD: p
      - image: redis
    steps:
      - checkout
      # install bundler
      - run:
          name: install bundler
          command: gem install bundler:1.17.3

      - run:
          name: Which bundler?
          command: bundle -v
      
     # Set up ENV vars (TODO - remove this bit)
      - run: 
          name: "Setup custom environment variables"
          command: echo 'export DESIGNATED_EMAIL="test@monumentmonitor.co.uk"' >> $BASH_ENV

      # Restore bundle cache
      - restore_cache:
          keys:
            - bundle-v2-{{ checksum "Gemfile.lock" }}
            - bundle-v2-

      - run:
          name: Bundle Install
          command: bundle check || bundle install

      # Store bundle cache
      - save_cache:
          key: bundle-v2-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      # database setup
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: Database setup
          command: |
            bundle exec rake db:create db:schema:load --trace
            bundle exec rake db:migrate

      - run:
          name: Double check bundler has run
          command: bundle install

      # Run rspec in parallel
      - run:
          name: Run rspec in parallel
          command: |
            bundle exec rspec --profile 10 \
                              --format RspecJunitFormatter \
                              --out test_results/rspec.xml \
                              --format progress \
                              $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings --timings-type=classname)


      # Save test results for timing analysis
      - store_test_results:
          path: test_results
